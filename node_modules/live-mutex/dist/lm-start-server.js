#!/usr/bin/env node
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const broker_1 = require("./broker");
let port = parseInt(process.argv[2] || process.env.live_mutex_port || '6970');
const index = process.argv.indexOf('--json');
let v = { port };
if (index > 0) {
    try {
        v = JSON.parse(process.argv[index + 1]);
    }
    catch (err) {
        console.error(`Could not parse your --json argument, try --json '{"port":3091}'.`);
        throw err.message;
    }
    port = v.port = (v.port || port);
}
if (!Number.isInteger(port)) {
    broker_1.log.error('Live-mutex: port could not be parsed to integer from command line input.');
    broker_1.log.error('Usage: lm_acquire_lock <key> <?port>');
    process.exit(1);
}
process.once('warning', function (e) {
    broker_1.log.error('process warning:', e && e.message || e);
});
process.once('error', function (e) {
    broker_1.log.error('process error:', e && e.message || e);
});
process.once('unhandledRejection', function (e) {
    broker_1.log.error('unhandledRejection:', e && e.message || e);
});
process.once('uncaughtException', function (e) {
    broker_1.log.error('uncaughtException:', e && e.message || e);
});
new broker_1.Broker(v).ensure().then(function (c) {
    broker_1.log.info('Started server on port:', c.getPort());
})
    .catch(function (err) {
    broker_1.log.error('caught:', err && err.message || err);
    process.exit(1);
});
